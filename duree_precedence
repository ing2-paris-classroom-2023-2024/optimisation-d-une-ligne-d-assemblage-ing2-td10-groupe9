#include <stdio.h>
#include <stdlib.h>

// Structure pour représenter un arc du graphe de précédence
typedef struct {
    int sommetdepart;
    int sommetarrivee;
} Arc;

//structure durée tache
typedef struct Sommet {
    int numerosommet;
    double duree;
}duree;


    // Fonction pour lire le fichier et construire le graphe
    int readPrecedences(const char *precedence, Arc **graph, int *numEdges) {
    FILE *file = fopen(precedence, "r");
    if (file == NULL) {
        fprintf(stderr, "Erreur lors de l'ouverture du fichier %s.\n", precedence);
        return 0;
    }

    int sommetdepart, sommetarrivee;
    int maxarc = 0;  // Initialisation arbitraire de la capacité du tableau
    *graph = malloc(maxarc * sizeof(Arc));
    *numEdges = 0;

    while (fscanf(file, "%d %d", &sommetdepart, &sommetarrivee) == 2) {
        if (*numEdges == maxarc) {
            // Agrandir le tableau si nécessaire
            maxarc *= 2;
            *graph = realloc(*graph, maxarc * sizeof(Arc));
        }

        (*graph)[*numEdges].sommetdepart = sommetdepart;
        (*graph)[*numEdges].sommetarrivee = sommetarrivee;
        (*numEdges)++;
    }

    fclose(file);
    return 1;
}

// Fonction pour afficher le graphe de précédence avec les durées associées
void printGraph(const Arc *graph, int numEdges, const duree *sommets, int numSommets) {
    printf("Graphe de precedence :\n");
    for (int i = 0; i < numEdges; i++) {
        // Trouver la durée associée au sommet 'to'
        double dureeTo = -1.0;  // Valeur par défaut si le sommet n'est pas trouvé
        for (int j = 0; j < numSommets; j++) {
            if (graph[i].sommetarrivee == sommets[j].numerosommet) {
                dureeTo = sommets[j].duree;
                break;
            }
        }

        printf("%d -> %d, duree : %g\n", graph[i].sommetdepart, graph[i].sommetarrivee, dureeTo);
    }
}

int main() {

        //ouverture des fichiers
        FILE *fichier = fopen("operation.txt", "r");
        if (fichier == NULL) {
            fprintf(stderr, "Erreur lors de l'ouverture du fichier.\n");
            return 1;
        }

        const char *filename = "precedences.txt";
        Arc *graph;
        int numeroarc;

        if (readPrecedences(filename, &graph, &numeroarc)) {

            struct Sommet sommets[100]; // Supposons que vous ne dépasserez pas 100 sommets
            size_t i = 0;

            while (fscanf(fichier, "%d %lf", &sommets[i].numerosommet, &sommets[i].duree) == 2) {
                i++;
            }

        /* Affichage du tableau contenant chaque sommet avec son temps d'éxécution associé
        printf("| Sommet | Duree |\n");
        printf("|--------|-------|\n");
        for (size_t j = 0; j < i; ++j) {
            printf("| %-6d | %-5.2f |\n", sommets[j].numerosommet, sommets[j].duree);
        }*/

            printGraph(graph, numeroarc, sommets, i);

            // Libérer la mémoire allouée pour le graphe
            free(graph);

            // Optimisation de la mémoire
            fclose(fichier);

            return 0;
        }
    }

